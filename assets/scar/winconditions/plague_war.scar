-----------------------------------------------------------------------
-- Imported Scripts
-----------------------------------------------------------------------

import("cardinal.scar")


-----------------------------------------------------------------------
-- Data
-----------------------------------------------------------------------

_mod = {
	module = "Mod",
}

Core_RegisterModule(_mod.module)

-----------------------------------------------------------------------
-- Scripting framework
-----------------------------------------------------------------------

MOD_SPAWN_INFECTED_TIMER_NAME = "MOD_SpawnInfectedTimer"
MOD_SPAWN_INFECTED_TIMER_VALUE = 2700
MOD_SPAWN_INFECTED_CHECK_FREQUENCY = 1.0

MOD_BP_VILLAGER = "villager"

function Mod_Start()	
	if not Timer_Exists(MOD_SPAWN_INFECTED_TIMER_NAME) then
		Timer_Start(MOD_SPAWN_INFECTED_TIMER_NAME, MOD_SPAWN_INFECTED_TIMER_VALUE)
	end
	
	Rule_AddInterval(Mod_OnTimerTick, MOD_SPAWN_INFECTED_CHECK_FREQUENCY)
end

function Mod_OnTimerTick()	
	local player = Mod_GetRandomHumanPlayer()	
	local player_enemy_id = Player_FindFirstEnemyPlayer(player.id)
	
	-- if player_enemy_id == nil or
	if Timer_GetElapsed(MOD_SPAWN_INFECTED_TIMER_NAME) == MOD_SPAWN_INFECTED_TIMER_VALUE then
		Rule_RemoveMe()
		Timer_End(MOD_SPAWN_INFECTED_TIMER_NAME)
		return
	end

	local sgroup_player_villager = Player_GetSquadsFromType(player.id, MOD_BP_VILLAGER)
	local sgroup_player_infected = SGroup_CreateIfNotFound("sg_infected")

	if Timer_GetRemaining(MOD_SPAWN_INFECTED_TIMER_NAME) == 2695 then -- 5secs
		Mod_SpreadPlague(player_enemy_id, sgroup_player_villager, sgroup_player_infected, 2)	
	
	elseif Timer_GetRemaining(MOD_SPAWN_INFECTED_TIMER_NAME) == 2640 then -- 60secs
		Mod_SpreadPlague(player_enemy_id, sgroup_player_villager, sgroup_player_infected, 4)	
	end
end

function Mod_GetRandomHumanPlayer()
	-- `pairs` already working randomly in LUA
	for _, player in pairs(PLAYERS) do
		if Player_IsHuman(player.id) and Player_IsAlive(player.id) then 
			return player
		end
	end
end

function Mod_SpreadPlague(player_enemy_id, sg_healthy, sg_infected, nb_infected)	
	for i = 1, nb_infected do
		local random_squad = SGroup_GetRandomSpawnedSquad(sg_healthy)
		
		if random_squad == nil then
			return
		end
		
		SGroup_Add(sg_infected, random_squad)
		SGroup_Remove(sg_healthy, random_squad)

		local infected_squad = SGroup_GetSpawnedSquadAt(sg_infected, i) -- one-based index
		local infected_entity = Squad_EntityAt(infected_squad, 0) 		-- zero-based index
		
		Entity_ConvertBlueprint(infected_entity, BP_GetEntityBlueprint("unit_infected"))
	end
end

